#!/bin/bash
# vim: ts=4:sw=4

#	Le script plescripts/db/dbfs/mount-dbfs est copié dans $ORACLE_HOME/ et
#	renommé en mount-dbfs-"nom du point de montage"

#	Le script contient le nom du point de montage.
typeset -r mount_point_name="${0##*-}"

#	contiendra soit start, stop ou delete.
typeset	-r last_action=/tmp/mount-dbfs-${mount_point_name}.last_action

typeset	-r log_name=/tmp/log-dbfs-${mount_point_name}-$(date +d%d-h%H).log

function mount_dbfs
{
	echo mount /mnt/$mount_point_name
	echo sudo -iu oracle mount /mnt/$mount_point_name
	sudo -iu oracle mount /mnt/$mount_point_name
	if [ $? -eq 0 ]
	then # Le premier accès est lent, donc j'en simule un.
		ll /mnt/$mount_point_name/* >/dev/null 2>&1
	fi
}

function umount_dbfs
{
	echo umount /mnt/$mount_point_name
	echo sudo -iu oracle fusermount -u /mnt/$mount_point_name
	sudo -iu oracle fusermount -u /mnt/$mount_point_name
	[ $? -eq 0 ] && return 1 || return 0	# il faut inverser les codes retours !
}

function check_mount_point
{
	if [ -f $last_action ]
	then
		typeset -r LAST_ACTION=$(cat $last_action)
	else
		typeset -r LAST_ACTION=UNDEF
	fi

	typeset	-ri max_loops=5

	echo check status for action $LAST_ACTION

	for iloop in $( seq $max_loops )
	do
		[ $iloop -ne 1 ] && sleep 5 || true
		case $LAST_ACTION in 
			start)
				sudo -iu oracle test -d /mnt/$mount_point_name/staging_area
				if [ $? -eq 0 ]
				then
					echo "check #${iloop} mount point up : OK"
					return 0
				else
					echo "check #${iloop}  mount point up : KO"
				fi
				;;

			stop|delete)
				sudo -iu oracle test ! -d /mnt/$mount_point_name/staging_area
				if [ $? -eq 0 ]
				then
					echo "check #${iloop}  mount point down : OK"
					return 1	# code inversé ???
				else
					echo "check #${iloop}  mount point down : KO"
				fi
				;;

			*)	echo "LAST_ACTION = '$LAST_ACTION' invalid."
				return 1
				;;
		esac
	done

	echo "command check failed."
	return 1
}

function force_umount
{
	echo "Force umount"
	echo sudo -iu oracle fusermount -u -z /mnt/$mount_point_name
	sudo -iu oracle fusermount -u /mnt/$mount_point_name
	sudo -iu oracle fusermount -u -z /mnt/$mount_point_name
}

echo >> $log_name
echo "run at $(date +"%Y/%m/%d %Hh%M")" >> $log_name

case "$1" in
	start)
		echo start > $last_action
		mount_dbfs >> $log_name 2>&1
		;;

	stop|delete)
		echo stop > $last_action
		umount_dbfs >> $log_name 2>&1
		;;

	check)
		check_mount_point >> $log_name 2>&1
		;;

	clean)
		force_umount >> $log_name 2>&1
		;;

	*)
		echo "'$1' ignored" >> $log_name 2>&1
		exit 1
		;;
esac

ret=$?
echo "Arg '$1' : return code = $ret" >> $log_name
exit $ret
