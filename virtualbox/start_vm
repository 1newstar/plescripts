#!/bin/bash

#	ts=4	sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r str_usage=\
"Usage : $ME <str>"

info "$ME $@"

[[ $# -eq 0 ]] && [[ -v ID_DB ]] && server=$ID_DB || server=$1

if [ x"$server" == x ]
then
	error "$str_usage"
	exit 1
fi

function virtualbox_start
{
	typeset -a vm_list
	typeset -i ivm=0
	while read vm_name
	do
		if [ x"$vm_name" != x ]
		then
			vm_list[$ivm]=$vm_name
			ivm=ivm+1
		fi
	done<<<"$(VBoxManage list vms | grep "$server" | cut -d\" -f2)"

	typeset -ri max_vms=${#vm_list[@]}

	info "$max_vms server(s) found for pattern $server : ${vm_list[@]}"
	[ $max_vms -eq 0 ] && exit 1

	typeset -i nr_vm_started=0
	exec_cmd -c "VBoxManage startvm ${vm_list[0]} --type headless"
	typeset -i vm_started=$?
	[ $vm_started -ne 0 ] && error "Failed to start ${vm_list[0]}" || nr_vm_started=1
	LN

	for i in $( seq 1 $(( max_vms - 1 )) )
	do
		if [ $vm_started -eq 0 ]
		then
			if [ "$GURU_MEDITATION" == "1" ]
			then
				info "sudo systemctl restart vboxdrv, peut résoudre le problème..."
				info "Attend le démarrage du crs pour éviter le 'GURU MEDITATION'"

				show_grid_status -server=${vm_list[$((i-1))]} -wait_time_secs=60
				LN
			else
				info "La variable GURU_MEDITATION n'est pas définie, pas d'attente du crs."
				wait_server ${vm_list[$((i-1))]}
			fi
		fi

		exec_cmd -c "VBoxManage startvm ${vm_list[$i]} --type headless"
		vm_started=$?
		[ $vm_started -ne 0 ] && error "Failed to start ${vm_list[$i]}" || nr_vm_started=nr_vm_started+1
		LN
	done

	if [ $vm_started -eq 0 ]
	then
		wait_server ${vm_list[$((i-1))]}
		show_grid_status -server=${vm_list[$((i-1))]} -wait_time_secs=60
		LN
		return 0
	else
		return 1
	fi
}

case ${hostvm##*_} in
	virtualbox)
		virtualbox_start
		exit $?
		;;

	*)
		error "${hostvm##*_} not implemented."
		exit 1
		;;
esac

