#!/bin/sh

#	ts=4	sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r str_usage=\
"Usage : $ME <str>"

info "$ME $@"

[[ $# -eq 0 ]] && [[ -v ID_DB ]] && server=$ID_DB || server=$1

if [ x"$server" == x ]
then
	error "$str_usage"
	exit 1
fi

function virtualbox_start
{
	typeset -a vm_list
	typeset -i ivm=0
	while read vm_name
	do
		vm_list[$ivm]=$vm_name
		ivm=ivm+1
	done<<<"$(VBoxManage list vms | grep "$server" | cut -d\" -f2)"

	typeset -ri max_vms=${#vm_list[@]}

	[ $max_vms -eq 0 ] && error "Server for $server not found." && exit 1

	exec_cmd -c "VBoxManage startvm ${vm_list[0]} --type headless"
	[ $? -ne 0 ] && error "Failed to start ${vm_list[0]}"
	LN

	for i in $( seq 1 $(( max_vms - 1 )) )
	do
		if [ "$GURU_MEDITATION" == "1" ]
		then
			info "sudo systemctl restart vboxdrv, peut résoudre le problème..."
			info "Attend le démarrage du crs pour éviter le 'GURU MEDITATION'"

			show_grid_status -wait_time_secs=30 -node=$i
			LN
		else
			info "La variable GURU_MEDITATION n'est pas définie, pas d'attente du crs."
			wait_server ${vm_list[$((i-1))]}
		fi

		exec_cmd "VBoxManage startvm ${vm_list[$i]} --type headless"
		[ $? -ne 0 ] && error "Failed to start ${vm_list[$i]}"
		LN
	done

	show_grid_status
}

case ${hostvm##*_} in
	virtualbox)
		virtualbox_start
		;;

	*)
		error "${hostvm##*_} not implemented."
		exit 1
		;;
esac

