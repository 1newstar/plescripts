#!/bin/bash
# vim: ts=4:sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r str_usage=\
"Usage : $ME <str>
	[-server=<str>]	si non définie testera ID_DB (cf set_db)
	[-wait_os=yes]  par défaut attend que l'OS de la VM ait démarré pour lancer la VM suivante.
"

info "$ME $@"

typeset server=undef
typeset	wait_os=yes

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			first_args=-emul
			shift
			;;

		-server=*)
			server=${1##*=}
			shift
			;;

		-wait_os=*)
			wait_os=${1##*=}
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			if [ $server == undef ]
			then
				server=$1
				shift
			else
				error "Arg '$1' invalid."
				LN
				info "$str_usage"
				exit 1
			fi
			;;
	esac
done

[[ $server == undef && -v ID_DB ]] && server=$ID_DB
exit_if_param_undef server	"$str_usage"

exit_if_param_invalid wait_os "yes no" "$str_usage"

# $1 vm_name
function start_db 
{
	typeset -r vm_name=$1

	sleep 180
	db_name=$(ssh oracle@$vm_name ". .profile >/dev/null;\
						srvctl status database -thisversion" | head -1 | cut -d\  -f4)

	ssh oracle@$vm_name ". .profile >/dev/null;\
								srvctl start database -db $db_name"
}


function virtualbox_start
{
	typeset -a vm_list
	typeset -i max_vms=0
	while read vm_name
	do
		[ x"$vm_name" == x ] && continue

		vm_list[$max_vms]=$vm_name
		max_vms=max_vms+1
	done<<<"$(VBoxManage list vms | grep "$server" | cut -d\" -f2)"

	info "$max_vms server(s) found for pattern $server : ${vm_list[@]}"
	[ $max_vms -eq 0 ] && exit 1

	typeset -i nr_vm_started=0
	exec_cmd -c "VBoxManage startvm ${vm_list[0]} --type headless"
	typeset -i vm_last_status=$?	#	Mémorise le status de la dernière VM démarrée.
	[ $vm_last_status -ne 0 ] && error "Failed to start ${vm_list[0]}" || nr_vm_started=1
	LN

	for i in $( seq 1 $(( max_vms - 1 )) )
	do
		# Attends que l'OS soit démarré pour éviter le GURU_MEDITATION.
		[[ $wait_os == yes && $vm_last_status -eq 0 ]] && wait_server ${vm_list[$((i-1))]}

		exec_cmd -c "VBoxManage startvm ${vm_list[$i]} --type headless"
		vm_last_status=$?
		[ $vm_last_status -ne 0 ] && error "Failed to start ${vm_list[$i]}" || nr_vm_started=nr_vm_started+1
		LN
	done

	if [ $nr_vm_started -eq $max_vms ]
	then
		return 0	# Toutes les VMs ont démarrés.
	else
		return 1	# Au moins une VM n'a pas démarré.
	fi
}

case ${hostvm##*_} in
	virtualbox)
		virtualbox_start
		exit $?
		;;

	*)
		error "${hostvm##*_} not implemented."
		exit 1
		;;
esac
