#!/bin/bash
# vim: ts=4:sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r PARAMS="$*"
typeset -r str_usage=\
"Usage : $ME
	[-db=<str>]         Détruit la ou les VMs correspondant à la base.
	[-server=<pattern>] Détruit les VMs correspondants au pattern.
	[-y]
"

typeset	db=undef
typeset	server=undef
typeset	confirm=yes

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			shift
			;;

		-db=*)
			db=${1##*=}
			shift
			;;

		-server=*)
			server=${1##*=}
			shift
			;;

		-y)
			confirm=no
			shift
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

if [ $server == undef ]
then
	exit_if_param_undef db "$str_usage"
	server=srv${db}
fi

exit_if_param_undef server "$str_usage"

# $1 vm name
# Affiche sur 1 le chemin contenant les fichiers de la VM.
#
# ne pas utiliser la variable vm_path de global.cfg, le chemin peut
# être changé lors de la création de la VM via local.cfg
function read_vm_path_folder
{
	# Lecture du fichier de configuration
	typeset -r config_file=$(VBoxManage showvminfo $1|grep -E "^Config file:"|cut -d: -f2)
	# Tous les fichiers de la VM sont dans le même répertoire que config_file.
	sed "s/^ *//"<<<${config_file%/*}
}

#	Lecture de toutes les VMs correspondantes au pattern $server.
typeset -a vm_list
while read vm_name
do
	[ x"$vm_name" != x ] && vm_list+=( $vm_name )
done<<<"$(VBoxManage list vms | grep "$server" | cut -d\" -f2)"

typeset -ri max_vms=${#vm_list[@]}
info "$max_vms server(s) found for pattern $server : ${vm_list[@]}"
[ $max_vms -eq 0 ] && exit 1 || true

[ $confirm == yes ] && confirm_or_exit "Delete them ?" || true

line_separator
info "Stop all VMs..."
exec_cmd stop_vm $db -dataguard=no
LN

line_separator
info "Delete all VMs.."
typeset -a dir_to_delete_list
for vm in ${vm_list[*]}
do
	vm_path_folder=$(read_vm_path_folder $vm)
	info "vm path folder for $vm : $vm_path_folder"

	if [ ! -d "$vm_path_folder" ]
	then
		error "$vm_path_folder not exists."
		LN
		exit 1
	fi

	dir_to_delete_list+=( $vm_path_folder )
	exec_cmd -c "VBoxManage unregistervm $vm --delete"
	LN
done

for dir in ${dir_to_delete_list}
do
	exec_cmd rm -rf \"$dir\"
	LN
done
