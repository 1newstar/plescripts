#!/bin/bash

#	ts=4	sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r str_usage=\
"Usage : $ME 
	[-reorg]       	Lance la réorganisation si elle est nécessaire.
	[-max_ext=#]   	Nombre d'extents maximum par disque.
	[-max_reorgs=#] Nombre maximum de réorganisation à effectuer.
	[-skip_gt=#]   	Ne pas réorganiser les fichiers de plus de # extents.
"

info "$ME $@"

typeset		reorg=no
typeset	-i	max_ext=8
typeset	-i	max_reorgs=0
typeset -i	skip_gt=0

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			first_args=-emul
			shift
			;;

		-reorg)
			reorg=yes
			shift
			;;

		-max_ext=*)
			max_ext=${1##*=}
			shift
			;;

		-max_reorgs=*)
			max_reorgs=${1##*=}
			shift
			;;

		-skip_gt=*)
			skip_gt=${1##*=}
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

function xfs_bmap_file
{
	typeset -r	vdi_file=$1

	typeset -ri nr_extents=$(sudo xfs_bmap "$vdi_file" | tail -1 | tr -s [:space:] | cut -d: -f1)

	msg=$(printf "%-18s : %02d extents " ${vdi_file##*/} $nr_extents)
	if [ $nr_extents -le $max_ext ]
	then
		info "$msg [$OK]"
		return 0
	else
		LN
		info "$msg [$KO] limit $max_ext extents, reorg needed..."
		return 1
	fi
}

if [ $reorg == yes ]
then
	info "La réorganisation sera faite s'il y a plus de $max_ext extents à réorganiser."
	[ $max_reorgs -ne 0 ] && info "    - Sur les $max_reorgs premiers fichiers."
	[ $skip_gt -ne 0 ] && info "    - Si le nombre d'extents à réorganiser est inférieur à $skip_gt"
	LN
	info "Press a key to continue or ctrl+c to abort"
	read keyboard
	LN
fi

typeset	-i	count_reorgs=0

cmd="find \"$vm_path/\" -name *.vdi"
fake_exec_cmd "$cmd"
while read vdi_file
do
	xfs_bmap_file "$vdi_file"
	if [ $? -ne 0 ]
	then
		if [ $reorg == yes ]
		then
			if [[ $max_reorgs -eq 0 || $count_reorgs -lt $max_reorgs ]]
			then
				info "Start reorg..."
				exec_cmd sudo xfs_fsr -v \"$vdi_file\"
				count_reorgs=count_reorgs+1
				xfs_bmap_file "$vdi_file"
				LN
			fi
		else
			info "    Details with :"
			info "    sudo xfs_bmap -v \"$vdi_file\""
			LN
		fi
	fi
done<<<"$(eval $cmd)"
