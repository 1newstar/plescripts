#!/bin/bash

#	ts=4	sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r str_usage=\
"Usage : $ME ...."

info "$ME $@"

typeset db=undef

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			first_args=-emul
			shift
			;;

		-db=*)
			db=${1##*=}
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

[[ $db = undef ]] && [[ -v ID_DB ]] && db=$ID_DB
exit_if_param_undef db	"$str_usage"

typeset -r	upper_db=$(to_upper $db)

typeset -r	cfg_path=~/plescripts/database_servers/$db
typeset -r	max_nodes=$(ls -1 $cfg_path/node* | wc -l)

[ $max_nodes -ne 2 ] && error "Uniquement RAC 2 n≈ìuds" && exit 1

typeset -r	db_type=$(cat $cfg_path/node1 | cut -d: -f1)
typeset -r	node1=$(cat $cfg_path/node1 | cut -d: -f2)
typeset -r	node2=$(cat $cfg_path/node2 | cut -d: -f2)

typeset -r	session_name="ORCL Top $node1 / Bottom $node2"
exec_cmd -ci tmux kill-session -t \"$session_name\"

case $db_type in
	rac)
		typeset -r name1=${upper_db}1
		typeset -r name2=${upper_db}2
		;;

	raco)
		typeset -r name1=${upper_db}_1
		typeset -r name2=${upper_db}_2
		;;
esac

set -x
tmux new -s "$session_name"	"ssh oracle@${node1} tail -1000f /u01/app/oracle/diag/rdbms/$db/${name1}/trace/alert_${name1}.log"			\;\
							split-window -v "ssh root@${node2} tail -1000f /u01/app/oracle/diag/rdbms/$db/${name2}/trace/alert_${name2}.log"			\;\
							selectp -t 0

