#!/bin/bash
# vim: ts=4:sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/vmlib.sh
. ~/plescripts/cfglib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset -r ME=$0
typeset -r PARAMS="$*"

typeset -r str_usage=\
"Usage : $ME"

typeset db=undef

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

#	Mémorise le nom des VM affichées, utile pour les Dataguard
typeset	vm_printed_list

# $1 vm name
function print_vm_running_status
{
	if vm_running $1
	then
		info -n -f "${UNDERLINE}$1${NORM}"
	else
		info -n -f "$1"
	fi
}

# $1 dbid
# [$2] skip_stby
function print_vm_database
{
	typeset -r	dbid=$1
	typeset	-r	stby_action=$2

	typeset	-r	str_dbid=$(printf "%-8s" $dbid)
	typeset	-ri	max_nodes=$(cfg_max_nodes $dbid)

	cfg_load_node_info $dbid 1
	if [[ "$vm_printed_list" == *$cfg_server_name* ]]
	then
		return 0
	fi

	if [[ $cfg_standby != none && "$stby_action" != "skip_stby" ]]
	then
		info "Dataguard servers :"
	fi

	if [ $max_nodes -eq 2 ]
	then
		info -n "$str_dbid : Oracle RAC $cfg_orarel, $(print_vm_running_status $cfg_server_name), "
		vm_printed_list="$vm_printed_list $cfg_server_name"
		cfg_load_node_info $dbid 2
		print_vm_running_status $cfg_server_name
		vm_printed_list="$vm_printed_list $cfg_server_name"
	else
		info -n "$str_dbid : Oracle $cfg_orarel, $(print_vm_running_status $cfg_server_name)"
		vm_printed_list="$vm_printed_list $cfg_server_name"
	fi
	info -n -f ", storage $cfg_luns_hosted_by"
	case $cfg_db_type in
		std|rac)
			info -f "/ASM"
			;;

		fs)
			info -f "/FS"
			;;
	esac

	if [ $cfg_standby != none ]
	then
		if [ "$stby_action" != skip_stby ]
		then
			print_vm_database $cfg_standby skip_stby
		else
			LN
		fi
	else
		LN
	fi
}

#ple_enable_log -params $PARAMS

info "Infra :"
info "Master $(print_vm_running_status $master_hostname)"
info "Infra  $(print_vm_running_status $infra_hostname)"
LN

line_separator
info "Databases :"
LN

while read fullpath
do
	[ x"$fullpath" != x ] && print_vm_database ${fullpath##*/} || true
done<<<"$(find ~/plescripts/database_servers/* -type d)"
