#!/bin/bash
# vim: ts=4:sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg
EXEC_CMD_ACTION=EXEC

typeset	-r	ME=$0
typeset	-r	PARAMS="$*"

if [ x"$SQLDEVELOPER_PATH" == x ]
then
	if command_exists sqldeveloper
	then
		# Lors d'une installation via rpm sqldevelopper est dans le PATH.
		# sqldevelopper est un script appelant un script..
		typeset	-r	real_fullpath=$(cat $(which sqldeveloper))
		SQLDEVELOPER_PATH=${real_fullpath%/*}
	else
		SQLDEVELOPER_PATH=$HOME/sqldeveloper
	fi
fi

[ x"$SQLCL_PATH" == x ] && SQLCL_PATH=$SQLDEVELOPER_PATH/sqldeveloper/bin || true

typeset	-r	str_usage=\
"Usage : $ME
Execute sqldeveloper or sqlcl.

Default values :
	SQLDEVELOPER_PATH=\$HOME/sqldeveloper
	SQLCL_PATH=\$SQLDEVELOPER_PATH/sqldeveloper/bin

You can export variables SQLDEVELOPER_PATH and SQLCL_PATH with other values
before to call this script.

Directories :
	sqldeveloper : $SQLDEVELOPER_PATH
	sqlc         : $SQLCL_PATH
"

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			shift
			;;

		-h|-help|help)
			info "$str_usage"
			LN
			exit 1
			;;

		*)
			break
	esac
done

case "${ME##*/}" in
	sqld)
		typeset -r script=$SQLDEVELOPER_PATH/sqldeveloper.sh
		;;
	sqlcl)
		typeset -r script=$SQLCL_PATH/sql
		;;
esac

if [ ! -f "$script" ]
then
	error "$script not exists."
	LN
	exit 1
fi

if [ x"$TNS_ADMIN" == x ]
then
	if [ -d ~/plescripts/tnsadmin ]
	then
		info "TNS_ADMIN not defined."
		fake_exec_cmd "export TNS_ADMIN=~/plescripts/tnsadmin"
		LN
		export TNS_ADMIN=~/plescripts/tnsadmin
	else
		warning "no TNS_ADMIN, execute tnssqldev.sh to create it."
		LN
	fi
fi

if [ x"$SQLPATH" == x ]
then
	info "SQLPATH not defined."
	fake_exec_cmd "export SQLPATH=~/plescripts/db/sql"
	LN
	export SQLPATH=~/plescripts/db/sql
fi

if [ $disable_dns_cache == yes ]
then
	info "Stop nscd.service"
	exec_cmd sudo systemctl stop nscd.service
	LN
fi

exec_cmd -c "$script ${@:1}"
LN

if [ $disable_dns_cache == yes ]
then
	info "Start nscd.service"
	exec_cmd sudo systemctl start nscd.service
	LN
fi
