#!/bin/sh

#	ts=4	sw=4

. ~/plescripts/plelib.sh
. ~/plescripts/global.cfg

EXEC_CMD_ACTION=NOP

typeset -r ME=$0
typeset -r str_usage="Usage : $ME ...."

typeset db=undef

while [ $# -ne 0 ]
do
	case $1 in
		-emul)
			EXEC_CMD_ACTION=NOP
			first_args=-emul
			shift
			;;

		-db=*)
			db=${1##*=}
			shift
			;;

		*)
			error "Arg '$1' invalid."
			LN
			info "$str_usage"
			exit 1
			;;
	esac
done

exit_if_param_undef db	"$str_usage"

typeset -r cfg_path=~/plescripts/infra/$db
exit_if_dir_not_exists $cfg_path

typeset -ri count_nodes=$(ls -1 $cfg_path/node* | wc -l)

typeset -ri	max_tests=2

typeset -i	count_tests=0
typeset -i	count_nodes_up=0
typeset -a	node_up_list

for inode in $( seq 1 $count_nodes )
do
	node_up_list[$inode]=ko
done

while [ $count_nodes_up -ne $count_nodes ]
do
	count_tests=count_tests+1
	[ $count_tests -gt $max_tests ] && break

	for inode in $( seq 1 $count_nodes )
	do
		if [ ${node_up_list[$inode]} = ko ]
		then
			node_name=$(cat $cfg_path/node${inode} | cut -d: -f2)
			~/plescripts/shell/wait_server $node_name
			if [ $? -eq 0 ]
			then
				node_up_list[$inode]=ok
				count_nodes_up=count_nodes_up+1
			fi
			LN
		fi
	done
done

if [ $count_nodes_up -eq $count_nodes ]
then
	info "All nodes for RAC $db are up."
	ret=0
else
	error "Node down for RAC $db : "
	ret=1
fi

for inode in $( seq 1 $count_nodes )
do
	info -n "   node $inode : "
	[ ${node_up_list[$inode]} = ko ] && info -f "$KO" || info -f "$OK"
done

exit $ret
